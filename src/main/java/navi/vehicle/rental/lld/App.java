/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package navi.vehicle.rental.lld;

import navi.vehicle.rental.lld.factory.PricingStrategyFactory;
import navi.vehicle.rental.lld.factory.StorageAdapterFactory;
import navi.vehicle.rental.lld.api.RentalService;
import navi.vehicle.rental.lld.enums.VehicleType;
import navi.vehicle.rental.lld.platform.PricingStrategy;
import navi.vehicle.rental.lld.platform.StorageAdapter;
import navi.vehicle.rental.lld.service.RentalServiceImpl;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;

public class App {
    public static void main(String[] args) {
        StorageAdapter storageAdapter = StorageAdapterFactory.getStorageAdapter();
        PricingStrategy pricingStrategy = PricingStrategyFactory.getPricingStrategy();
        RentalService rentalService = new RentalServiceImpl(storageAdapter, pricingStrategy);

        /* Sample usage
        System.out.println(rentalService.addBranch("B1", List.of(VehicleType.CAR, VehicleType.BIKE, VehicleType.VAN)));
        System.out.println(rentalService.addVehicle("B1", VehicleType.CAR, "V1", 500.0));
        System.out.println(rentalService.addVehicle("B1", VehicleType.CAR, "V2", 1000.0));
        System.out.println(rentalService.addVehicle("B1", VehicleType.BIKE, "V3", 250.0));
        System.out.println(rentalService.addVehicle("B1", VehicleType.BIKE, "V4", 300.0));
        System.out.println(rentalService.addVehicle("B1", VehicleType.BUS, "V5", 2500.0));
        System.out.println(rentalService.bookVehicle("B1", VehicleType.VAN, 1, 5));
        System.out.println(rentalService.bookVehicle("B1", VehicleType.CAR, 1, 3));
        System.out.println(rentalService.bookVehicle("B1", VehicleType.BIKE, 2, 3));
        System.out.println(rentalService.bookVehicle("B1", VehicleType.BIKE, 2, 5));
        System.out.println(rentalService.displayVehicles("B1", 1, 5));
         */

        // Sample file is provided in navi-vehicle-rental-lld/src/main/resources/Sample.txt
        BufferedReader reader = new BufferedReader(
                new InputStreamReader(System.in));
        try {
            String filePath = reader.readLine();
            List<String> allLines = Files.readAllLines(Paths.get(filePath));
            allLines.forEach(line -> {
                String[] tokens = line.split(" ");
                switch (tokens[0]) {
                    case "ADD_BRANCH":
                        System.out.println(rentalService.addBranch(tokens[1], List.of(Arrays.stream(tokens[2].split(",")).map(VehicleType::valueOf).toArray(VehicleType[]::new))));
                        break;
                    case "ADD_VEHICLE":
                        System.out.println(rentalService.addVehicle(tokens[1], VehicleType.valueOf(tokens[2]), tokens[3], Double.parseDouble(tokens[4])));
                        break;
                    case "BOOK":
                        System.out.println(rentalService.bookVehicle(tokens[1], VehicleType.valueOf(tokens[2]), Integer.parseInt(tokens[3]), Integer.parseInt(tokens[4])));
                        break;
                    case "DISPLAY_VEHICLES":
                        System.out.println(rentalService.displayVehicles(tokens[1], Integer.parseInt(tokens[2]), Integer.parseInt(tokens[3])));
                        break;
                    default:
                        System.out.println("Invalid command");
                }
            });
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}
